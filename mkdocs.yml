site_name: "Embedded Systems Course"
site_url: "https://Austin-Fulbright.github.io/embedded-systems-course/"
theme:
  name: material
  custom_dir: overrides
  extra_css:
    - extra.css

nav:
  - Home: index.md
  - C-Programming:
      - Introduction and Basic Syntax: Course/C-programming/basic_syntax_quick/basic_syntax_quick.md
      - Arrays:
          - Arrays as functions: Course/C-programming/arrays/arrays_as_functions/arrays_as_functions.md
          - Character arrays: Course/C-programming/arrays/character_arrays/character_arrays.md
      - Memory:
          - Heap vs stack: Course/C-programming/memory/heap_vs_stack/heap_vs_stack.md
          - Dynamic memory allocation: Course/C-programming/memory/dynamic_memory_allocation/dynamic_memory_allocation.md
          - Everything pointers: Course/C-programming/memory/everything_pointers/everything_pointers.md
      - Structures:
          - Self-referential structures: Course/C-programming/structures/self_referential_structures/self_referential_structures.md
          - Unions: Course/C-programming/structures/unions/unions.md
          - Bit-fields in Structures: Course/C-programming/structures/bit_fields_in_structures/bit_fields_in_structures.md
      - File Handling: Course/C-programming/file_handling/file_handling.md
      - Advanced Memory Management and Pointers:
          - Memory Leaks: Course/C-programming/advanced_memory_management_and_pointers/memory_leaks/memory_leaks.md
          - Memory Management Techniques: Course/C-programming/advanced_memory_management_and_pointers/memory_management_techniques/memory_management_techniques.md
          - Buffer Overflow: Course/C-programming/advanced_memory_management_and_pointers/buffer_overflow/buffer_overflow.md
          - Security Vulnerabilities: Course/C-programming/advanced_memory_management_and_pointers/security_vulnerabilities/security_vulnerabilities.md
          - Constant Pointers: Course/C-programming/advanced_memory_management_and_pointers/constant_pointers/constant_pointers.md
          - Void Pointers: Course/C-programming/advanced_memory_management_and_pointers/void_pointers/void_pointers.md
          - Function Pointer Arrays and Callbacks: Course/C-programming/advanced_memory_management_and_pointers/function_pointer_arrays_and_callbacks/function_pointer_arrays_and_callbacks.md
      - Preprocessor Directives:
          - Macros: Course/C-programming/preprocessor_directives/macros/macros.md
          - Conditional Compilation: Course/C-programming/preprocessor_directives/conditional_compilation/conditional_compilation.md
          - File Inclusion: Course/C-programming/preprocessor_directives/file_inclusion/file_inclusion.md
          - Stringizing and Token Pasting: Course/C-programming/preprocessor_directives/stringizing_and_token_pasting/stringizing_and_token_pasting.md
      - Error Handling:
          - Error Codes: Course/C-programming/error_handling/error_codes/error_codes.md
          - Assert Macros: Course/C-programming/error_handling/assert_macros/assert_macros.md
          - Setjmp and Longjmp for non-local Jumps: Course/C-programming/error_handling/setjmp_and_longjmp/setjmp_and_longjmp.md
      - Multithreading and Concurrency: Course/C-programming/multithreading_and_concurrency/multithreading_and_concurrency.md
      - Data Structures (quick): Course/C-programming/data_structures_quick/data_structures_quick.md
      - OOP Concepts in C: Course/C-programming/oop_concepts_in_c/oop_concepts_in_c.md
      - Procedural Programming in C: Course/C-programming/procedural_programming_in_c/procedural_programming_in_c.md
      - Networking:
          - Sockets: Course/C-programming/networking/sockets/sockets.md
          - Client-Server: Course/C-programming/networking/client_server/client_server.md
          - TCP vs UDP: Course/C-programming/networking/tcp_vs_udp/tcp_vs_udp.md
          - Multithreaded network app: Course/C-programming/networking/multithreaded_network_app/multithreaded_network_app.md
          - Protocols: Course/C-programming/networking/protocols/protocols.md
      - Low-Level Programming:
          - Bitwise: Course/C-programming/low_level_programming/bitwise/bitwise.md
          - Inline Assembly: Course/C-programming/low_level_programming/inline_assembly/inline_assembly.md
          - Memory-mapped I/O: Course/C-programming/low_level_programming/memory_mapped_io/memory_mapped_io.md
          - Interfacing with hardware: Course/C-programming/low_level_programming/interfacing_with_hardware/interfacing_with_hardware.md
          - Embedded Systems: Course/C-programming/low_level_programming/embedded_systems/embedded_systems.md
      - C Advanced Memory for Embedded Systems:
          - Custom Allocators: Course/C-programming/c_advanced_memory_for_embed_sys/custom_allocators/custom_allocators.md
          - Memory Pools: Course/C-programming/c_advanced_memory_for_embed_sys/mem_pools/mem_pools.md
          - Memory Alignment for SIMD and Specific Hardware: Course/C-programming/c_advanced_memory_for_embed_sys/memory_alignment_for_simd/memory_alignment_for_simd.md
          - Memory Fragments and Defrags: Course/C-programming/c_advanced_memory_for_embed_sys/memory_fragments_and_defrags/memory_fragments_and_defrags.md
          - Garbage Collection: Course/C-programming/c_advanced_memory_for_embed_sys/garbage_collection/garbage_collection.md
      - C Advanced Multithreading for Embedded Systems:
          - Lock-Free Programming: Course/C-programming/c_advanced_multithreading_for_embed_sys/lock_free_programming/lock_free_programming.md
          - Thread Pools: Course/C-programming/c_advanced_multithreading_for_embed_sys/thread_pools/thread_pools.md
          - Atomic Operations: Course/C-programming/c_advanced_multithreading_for_embed_sys/atomic_operations/atomic_operations.md
          - Memory Barriers and Fences: Course/C-programming/c_advanced_multithreading_for_embed_sys/memory_barriers_and_fences/memory_barriers_and_fences.md
          - Deadlock Detection and Avoidance: Course/C-programming/c_advanced_multithreading_for_embed_sys/deadlock_detection_and_avoidance/deadlock_detection_and_avoidance.md
          - Concurrent Data Structures: Course/C-programming/c_advanced_multithreading_for_embed_sys/concurrent_data_structures/concurrent_data_structures.md
      - Compilers and Linkers:
          - Writing C Compilers and Interpreters: Course/C-programming/compilers_and_linkers/writing_c_compilers_and_interpreters/writing_c_compilers_and_interpreters.md
          - Compiler Optimization: Course/C-programming/compilers_and_linkers/compiler_optimization/compiler_optimization.md
          - Linker Scripts: Course/C-programming/compilers_and_linkers/linker_scripts/linker_scripts.md
          - Cross Compilation for Different Architectures: Course/C-programming/compilers_and_linkers/cross_compilation/cross_compilation.md
          - Code Generation: Course/C-programming/compilers_and_linkers/code_generation/code_generation.md
          - IR Compiler Design: Course/C-programming/compilers_and_linkers/ir_compiler_design/ir_compiler_design.md
      - Embedded C:
          - Direct Register Access: Course/C-programming/embedded_c/direct_register_access/direct_register_access.md
          - Writing Device Drivers: Course/C-programming/embedded_c/writing_device_drivers/writing_device_drivers.md
          - ISR in Embedded Systems: Course/C-programming/embedded_c/isr_in_embedded_systems/isr_in_embedded_systems.md
          - Bare Metal Programming: Course/C-programming/embedded_c/bare_metal_programming/bare_metal_programming.md
          - Real-Time Operating System: Course/C-programming/embedded_c/real_time_operating_system/real_time_operating_system.md
          - Low-Power Design: Course/C-programming/embedded_c/low_power_design/low_power_design.md
      - Metaprogramming:
          - Metaprogramming with Injection: Course/C-programming/metaprogramming/metaprogramming_with_injection/metaprogramming_with_injection.md
          - Using Templates: Course/C-programming/metaprogramming/using_templates/using_templates.md
          - Code Abstraction: Course/C-programming/metaprogramming/code_abstraction/code_abstraction.md
      - Dynamic Libraries and Linkers:
          - Creating and Using Shared Objects: Course/C-programming/dynamic_libraries_and_linkers/creating_shared_objects/creating_shared_objects.md
          - Position Independent Code: Course/C-programming/dynamic_libraries_and_linkers/position_independent_code/position_independent_code.md
          - Inter-Process Communication: Course/C-programming/dynamic_libraries_and_linkers/inter_process_communication/inter_process_communication.md
      - Advanced File System and I/O:
          - Async I/O (AIO, epoll, kqueue): Course/C-programming/advanced_file_systems_and_io/async_io/async_io.md
          - Memory Mapped Files: Course/C-programming/advanced_file_systems_and_io/memory_mapped_files/memory_mapped_files.md
          - High Performance I/O Techniques: Course/C-programming/advanced_file_systems_and_io/high_performance_io/high_performance_io.md
      - Low-Level Debugging:
          - Valgrind, Perf, Gprof: Course/C-programming/low_level_debugging/valgrind_perf_gprof/valgrind_perf_gprof.md
          - Performance Counters: Course/C-programming/low_level_debugging/performance_counters/performance_counters.md
          - Compiler Optimization Impact: Course/C-programming/low_level_debugging/compiler_optimization_impact/compiler_optimization_impact.md
          - Reverse Engineering of Compiled C Code: Course/C-programming/low_level_debugging/reverse_engineering/reverse_engineering.md
          - Stack Unwinding and Core Dump Analysis: Course/C-programming/low_level_debugging/stack_unwinding_core_dump/stack_unwinding_core_dump.md
      - Systems Programming:
          - System Calls: Course/C-programming/systems_programming/system_calls/system_calls.md
          - Daemons: Course/C-programming/systems_programming/daemons/daemons.md
          - Signals and Signal Handling: Course/C-programming/systems_programming/signals/signals.md
          - Process Control IPC: Course/C-programming/systems_programming/process_control_ipc/process_control_ipc.md
          - Memory Protection: Course/C-programming/systems_programming/memory_protection/memory_protection.md
          - Writing Loadable Kernel Modules: Course/C-programming/systems_programming/loadable_kernel_modules/loadable_kernel_modules.md
      - Hardware-Specific:
          - Writing Bootloaders in C: Course/C-programming/hardware_specific_programming/bootloaders/bootloaders.md
          - Firmware Development: Course/C-programming/hardware_specific_programming/firmware_development/firmware_development.md
          - AVR, ARM Cortex Microcontroller Programming: Course/C-programming/hardware_specific_programming/avr_arm_programming/avr_arm_programming.md
      - Optimization:
          - Algorithmic Optimization and Profiling: Course/C-programming/optimization/algorithmic_optimization/algorithmic_optimization.md
          - Manual Loop Optimization: Course/C-programming/optimization/manual_loop_optimization/manual_loop_optimization.md
          - Cache-Friendly Code: Course/C-programming/optimization/cache_friendly_code/cache_friendly_code.md
          - SIMD: Course/C-programming/optimization/simd/simd.md
          - Processor-Specific Optimization: Course/C-programming/optimization/processor_specific/processor_specific.md
          - Inline Assembly: Course/C-programming/optimization/inline_assembly/inline_assembly.md
  - Computer Architecture:
  - Embedded Systems:
  - ESP-IDF:
  - ESP-IDF for cryptocurrecy:
  - ESP-IDF for game development:
  - Espressif:
  - FreeRTOS:
  - Operating Systems:
  
  

markdown_extensions:
  - admonition
  - codehilite
  - toc:
      permalink: true
  - pymdownx.arithmatex
  - pymdownx.betterem
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.details
  - pymdownx.inlinehilite
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.superfences
  - pymdownx.tabbed
  - pymdownx.tasklist
  - pymdownx.tilde

